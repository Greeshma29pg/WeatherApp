{"version":3,"sources":["components/weather/weathercard.js","components/weather/temp.js","App.js","index.js"],"names":["Weathercard","tempInfo","useState","weatherState","setWeatherState","temp","humidity","pressure","weathermood","name","speed","country","sunset","console","log","useEffect","date","Date","timeStr","getHours","getMinutes","className","Math","round","toLocaleString","Temp","searchValue","setSearchValue","setTempInfo","getWeatherInfo","a","url","fetch","res","json","data","main","weather","wind","sys","type","placeholder","autoFocus","id","value","onChange","e","target","onClick","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2141af5c.chunk.js","sourcesContent":["import React, { useState,useEffect } from 'react'\r\n\r\nconst Weathercard = ({tempInfo}) => {\r\n    const [weatherState,setWeatherState]=useState(\"\");\r\n    const{\r\n        temp,\r\n        humidity,\r\n        pressure,\r\n        weathermood,\r\n        name,\r\n        speed,\r\n        country,\r\n        sunset,\r\n    }=tempInfo;\r\n    console.log(tempInfo);\r\n    useEffect(() => {\r\n        if(weathermood){\r\n            switch (weathermood) {\r\n                case \"Clouds\":\r\n                    setWeatherState(\"wi-day-cloudy\");\r\n                    break;\r\n                case \"Haze\":\r\n                    setWeatherState(\"wi-fog\");\r\n                    break;\r\n                case \"Clear\":\r\n                    setWeatherState(\"wi-night-clear\");\r\n                    break;\r\n                case \"Mist\":\r\n                    setWeatherState(\"wi-dust\");\r\n                    break;\r\n                default:\r\n                    setWeatherState(\"wi-day-sunny\");\r\n                    break;\r\n            }\r\n        }\r\n    }, [weathermood])\r\n\r\n    // converting seconds to time \r\n    let sec =sunset;\r\n    let date=new Date(sec*1000);\r\n    let timeStr=`${date.getHours()}:${date.getMinutes()}`;\r\n    return (\r\n        <>\r\n            {/* our temp card  */}\r\n            <article className=\"widget\">\r\n                <div className=\"weatherIcon\">\r\n                    <i className={`wi ${weatherState}`}></i>\r\n                </div>\r\n                <div className=\"weatherInfo\">\r\n                    <div className=\"temperature\">\r\n                        <span>{Math.round((temp-273) * 100) / 100}&deg;</span>\r\n                        {/* <span>{temp-273.15}&deg;</span> */}\r\n                    </div>\r\n                    <div className=\"description\">\r\n                        <div className=\"weatherCondition\">{weathermood}</div>\r\n                        <div className=\"place\">{name}, {country}</div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"date\">{new Date().toLocaleString()}</div>\r\n\r\n                {/* extra 4 info  */}\r\n                <div className=\"extra-temp\">\r\n                    <div className=\"temp-info-minmax\">\r\n                        <div className=\"two-sided-section\">\r\n                            <p><i className={\"wi wi-sunset\"}></i></p>\r\n                            <p className=\"extra-info-leftside\">\r\n                                {timeStr} <br />\r\n                                Sunset\r\n                            </p>\r\n                        </div>\r\n                        <div className=\"two-sided-section\">\r\n                            <p><i className={\"wi wi-humidity\"}></i></p>\r\n                            <p className=\"extra-info-leftside\">\r\n                                {humidity} <br />\r\n                                Humidity\r\n                            </p>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"weather-extra-info\">\r\n                        <div className=\"two-sided-section\">\r\n                            <p><i className={\"wi wi-rain\"}></i></p>\r\n                            <p className=\"extra-info-leftside\">\r\n                                {pressure} <br />\r\n                                Pressure\r\n                            </p>\r\n                        </div>\r\n                        <div className=\"two-sided-section\">\r\n                            <p><i className={\"wi wi-strong-wind\"}></i></p>\r\n                            <p className=\"extra-info-leftside\">\r\n                                {speed} <br />\r\n                                Speed\r\n                            </p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </article>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Weathercard\r\n","import React, { useState, useEffect } from 'react'\r\nimport Weathercard from './weathercard';\r\nimport \"./style.css\"\r\n\r\nconst Temp = () => {\r\n    const [searchValue, setSearchValue] = useState(\"Pune\");\r\n    const [tempInfo,setTempInfo]=useState({});\r\n\r\n    const getWeatherInfo = async () => {\r\n        try {\r\n            let url = `https://api.openweathermap.org/data/2.5/weather?q=${searchValue}&units=metric\r\n            &appid=eb0633f9b942a525f19e53563060c67e`;\r\n            const res=await fetch(url);\r\n            const data=await res.json();\r\n            const {temp,humidity,pressure}=data.main;\r\n            const {main:weathermood}=data.weather[0];\r\n            const {name}=data;\r\n            const {speed}=data.wind;\r\n            const {country,sunset}=data.sys;\r\n\r\n            const myNewWeatherInfo={\r\n                temp,\r\n                humidity,\r\n                pressure,\r\n                weathermood,\r\n                name,\r\n                speed,\r\n                country,\r\n                sunset,\r\n            };\r\n\r\n            setTempInfo(myNewWeatherInfo);\r\n\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        getWeatherInfo();\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <div className=\"wrap\">\r\n                <div className=\"search\">\r\n                    <input type=\"search\" placeholder=\"Search\" autoFocus id=\"search\"\r\n                        className=\"searchTerm\" value={searchValue} onChange={(e) => setSearchValue(e.target.value)} />\r\n                    <button className=\"searchButton\" type=\"button\" onClick={getWeatherInfo}>Search</button>\r\n                </div>\r\n            </div>\r\n            {/* our temp card  */}\r\n            <Weathercard tempInfo={tempInfo}/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Temp\r\n","import React from 'react'\nimport Temp from './components/weather/temp'\n\nconst App = () => {\n  return <Temp/>\n}\nexport default App\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n  );\n"],"sourceRoot":""}